// Generated by CoffeeScript 1.8.0
var __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

window.App = (function(_super) {
  __extends(App, _super);

  function App() {
    return App.__super__.constructor.apply(this, arguments);
  }

  App.prototype.initialize = function() {
    var dealerHand, deck, playerHand;
    this.set('deck', deck = new Deck());
    this.set('playerHand', deck.dealPlayer());
    playerHand = this.get('playerHand');
    this.set('dealerHand', deck.dealDealer());
    dealerHand = this.get('dealerHand');
    playerHand.on('blackJack', function() {
      return console.log('Jack pot');
    });
    playerHand.on('busted', function() {
      return console.log('damn i lost');
    });
    playerHand.on('stand', function() {
      return dealerHand.dealerPlay();
    });
    dealerHand.on('blackJack', function() {
      return console.log('dealer hits Jack pot');
    });
    dealerHand.on('busted', function() {
      return console.log('damn dealer lost?');
    });
    return dealerHand.on('stand', function() {
      var dealerScore, playerScore;
      dealerScore = dealerHand.scores()[0];
      playerScore = playerHand.scores()[0];
      if (dealerScore > playerScore) {
        alert('Dealer Wins');
      }
      if (playerScore > dealerScore) {
        alert('Player Wins');
      }
      if (playerScore === dealerScore) {
        return alert('Draw Game');
      }
    });
  };

  return App;

})(Backbone.Model);
